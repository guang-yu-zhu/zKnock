% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat.sqrt_lasso.R
\name{stat.sqrt_lasso}
\alias{stat.sqrt_lasso}
\title{Importance statistics based on the square-root lasso}
\usage{
stat.sqrt_lasso(X, X_k, y, ...)
}
\arguments{
\item{X}{n-by-p matrix of original variables.}

\item{X_k}{n-by-p matrix of knockoff variables.}

\item{y}{vector of length n, containing the response variables of numeric type.}

\item{...}{additional arguments specific to \code{slim}.}
}
\value{
A vector of statistics \eqn{W} of length p.
}
\description{
Computes the signed maximum statistic
\deqn{W_j = \max(Z_j, \tilde{Z}_j) \cdot \mathrm{sgn}(Z_j - \tilde{Z}_j),}
where \eqn{Z_j} and \eqn{\tilde{Z}_j} are the maximum values of
\eqn{\lambda} at which the jth variable and its knockoff, respectively,
enter the SQRT lasso model.
}
\details{
With default parameters, this function uses the package \code{RPtests}
to run the SQRT lasso. By specifying the appropriate optional parameters,
one can use different Lasso variants including Dantzig Selector, LAD Lasso,
SQRT Lasso and Lq Lasso for estimating high dimensional sparse linear models.

For a complete list of the available additional arguments, see \code{\link[RPtests:sqrt_lasso]{RPtests::sqrt_lasso()}}.
}
\examples{
set.seed(2024)
n=80; p=100; k=10; Ac = 1:k; Ic = (k+1):p
X = generate_X(n=n,p=p)
y <- generate_y(X, p_nn=k, a=3)
Xk = create.shrink_Gaussian(X = X, n_ko = 10)
res1 = knockoff.filter(X, y, Xk, statistic = stat.sqrt_lasso,
                       offset = 1, fdr = 0.1)
res1
perf_eval(res1$shat,Ac,Ic)

}
\seealso{
Other statistics: 
\code{\link{stat.SHAP}()},
\code{\link{stat.forward_selection}()},
\code{\link{stat.glmnet_coefdiff}()},
\code{\link{stat.glmnet_lambdadiff}()},
\code{\link{stat.random_forest}()},
\code{\link{stat.stability_selection}()},
\code{\link{stat.xgboost}()}
}
\concept{statistics}
