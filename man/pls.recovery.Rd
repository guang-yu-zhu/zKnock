% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.recovery.R
\name{pls.recovery}
\alias{pls.recovery}
\title{Calculate \eqn{\hat{X}} by fitting PLS regression on its neighbours}
\usage{
pls.recovery(Y, X, ncomp, keepX = rep(ncol(X)))
}
\arguments{
\item{Y}{A numeric vector representing the response variable.}

\item{X}{A numeric matrix or data frame representing the predictor variables.}

\item{ncomp}{An integer specifying the number of components to use in the PLS regression model.}

\item{keepX}{A numeric vector specifying the number of variables to keep in each dimension. By default, all variables are used.}
}
\value{
A numeric vector \eqn{\hat{Y}} containing the predicted values from the PLS regression model.
}
\description{
This function fits a partial least squares (PLS) or sparse partial least squares (sPLS) regression model to predict \eqn{\hat{Y}} using the predictor matrix \eqn{X}. The fitted values \eqn{\hat{Y}} are returned.
}
\details{
This function performs PLS regression using the \code{mixOmics} package. It allows for both standard PLS and sparse PLS, where \code{keepX} controls the number of variables retained in each dimension. The function returns the predicted values \eqn{\hat{Y}} for the response variable \eqn{Y} using all the components specified by \code{ncomp}.
}
\examples{
X <- matrix(rnorm(100), nrow = 10, ncol = 10)
Y <- rnorm(10)
Y.hat <- pls.recovery(Y, X, ncomp = 2, keepX = rep(5, 2))

}
\seealso{
Other recovery: 
\code{\link{glmnet.recovery}()},
\code{\link{ols.recovery}()},
\code{\link{simple.recovery}()},
\code{\link{spls.recovery}()}
}
\concept{recovery}
