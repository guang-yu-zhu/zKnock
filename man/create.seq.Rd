% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.seq.R
\name{create.seq}
\alias{create.seq}
\title{Sequential knockoffs for continuous and categorical variables}
\usage{
create.seq(X, n_ko = 1, seq_simulator = glmnet.recovery, verbose = FALSE, ...)
}
\arguments{
\item{X}{A data frame or tibble with numeric and factor columns only. The number of columns, \code{ncol(X)}, must be greater than 2.}

\item{n_ko}{Integer. The number of knockoff matrices to generate. Default is 1.}

\item{seq_simulator}{Function that simulates sequential knockoffs. Default is \code{glmnet.recovery}, which simulates responses from an estimated elastic-net model.}

\item{verbose}{Logical. Whether to display progress information during the knockoff generation. Default is FALSE.}

\item{...}{Additional parameters passed to \code{seq_simulator}. For the default elastic-net method, these are passed to \code{cv.glmnet}.}
}
\value{
A list of data frames or tibbles, each containing the sequential knockoff copies of \code{X}, with the same type and dimensions as the original \code{X}.
}
\description{
This function generates sequential knockoff copies of the input data frame \code{X}. Sequential knockoffs simulate new variables for each column of \code{X} using the \code{seq_simulator}, which by default is \code{glmnet.recovery}. This default method fits elastic-net models to sequentially generate knockoffs.
}
\details{
\code{create.seq} performs sequential knockoff simulations using elastic-net regression as the default method. It loops over the columns of \code{X} and generates knockoffs for each column, using the other columns as predictors.
}
\examples{
set.seed(1)
X <- generate_X(n = 100, p = 6, p_b = 2, cov_type = "cov_equi", rho = 0.5)
Xk <- create.seq(X)

}
\seealso{
Other create: 
\code{\link{create.fixed}()},
\code{\link{create.gaussian}()},
\code{\link{create.pc}()},
\code{\link{create.pls}()},
\code{\link{create.second_order}()},
\code{\link{create.shrink_Gaussian}()},
\code{\link{create.sparse_Gaussian}()},
\code{\link{create.sparse_seq}()},
\code{\link{create.zpls}()}
}
\concept{create}
