% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agg_BH.R
\name{agg_BH}
\alias{agg_BH}
\title{Aggregated Knockoffs with AKO (Aggregation of Multiple Knockoffs)}
\usage{
agg_BH(Ws_mat, fdr = 0.1, offset = 0, gamma = 0.3)
}
\arguments{
\item{Ws_mat}{A matrix of test statistics from multiple knockoff filters, where each row represents one set of test statistics and each column represents a variable.}

\item{fdr}{A numeric value of the target false discovery rate (FDR) level. Default is \eqn{0.1}.}

\item{offset}{An integer (0 or 1) specifying the offset in the empirical p-value calculation. Default is \eqn{0}.}

\item{gamma}{A numeric value for quantile aggregation in the multiple knockoff p-value aggregation. Default is \eqn{0.3}.}
}
\value{
A vector \code{shat} containing the indices of selected variables after aggregating knockoff results.
}
\description{
Performs AKO (Aggregation of Multiple Knockoffs)
}
\details{
\enumerate{
\item \strong{Calculate intermediate p-value} \eqn{\pi_j^{(b)}}, for all \eqn{j \in [p]} and \eqn{b \in [B]}:
\deqn{
   \pi_j = \begin{cases}
   \frac{1 + \#\left\{k: W_k \leq -W_j \right\}}{p}, & \text{if } W_j > 0 \\
   1, & \text{if } W_j \leq 0
   \end{cases}}
\item \strong{Aggregate using the quantile aggregation procedure} (Meinshausen et al. 2009):
\deqn{
   \bar{\pi}_j = \min \left\{1, \frac{q_\gamma\left(\left\{\pi_j^{(b)}: b \in [B]\right\}\right)}{\gamma}\right\}
   }
\item \strong{Control FDR using Benjamini-Hochberg step-up procedure} (BH, Benjamini & Hochberg 1995):
\itemize{
\item Order p-values: \eqn{\bar{\pi}_{(1)} \leq \bar{\pi}_{(2)} \leq \ldots \leq \bar{\pi}_{(p)}}.
\item Find: \eqn{\widehat{k}_{BH} = \max \left\{k: \bar{\pi}_{(k)} \leq \frac{k \alpha}{p}\right\}}.
\item Select: \eqn{\widehat{\mathcal{S}} = \left\{j \in [p]: \bar{\pi}_{(j)} \leqslant \bar{\pi}_{\left(\widehat{k}_{BH}\right)}\right\}}.
}
}
}
\examples{
# Linear Regression
set.seed(2024)
p = 100; n = 80; k = 10; scale = 3
Ac = 1:k
rho = 0.3; SigmaX <- toeplitz(rho^(0:(p-1)))
SigmaXhalf = chol(SigmaX)
beta = matrix(0, p, 1)
beta[Ac] = sample(c(-1, 1) * scale, k, replace = TRUE)
X = matrix(rnorm(n * p), n) \%*\% SigmaXhalf
y = X \%*\% beta + rnorm(n)
Xk = create.knockoff(X = X, type = 'shrink', n_ko = 10)
res1 = knockoff.filter(X, y, Xk, statistic = stat.glmnet_coefdiff,
                       offset = 1, fdr = 0.1)
agg_BH(res1$Ws)

}
\references{
\itemize{
\item Nguyen TB, Chevalier JA, Thirion B, Arlot S. Aggregation of multiple knockoffs. In: International Conference on Machine Learning. PMLR; 2020. p. 7283â€“93.
\item Tian P, Hu Y, Liu Z et al. Grace-AKO: a novel and stable knockoff filter for variable selection incorporating gene network structures. BMC Bioinformatics#' @keywords internal
}
}
\seealso{
Other aggregate: 
\code{\link{agg_Avg}()},
\code{\link{agg_Freq}()}
}
\concept{aggregate}
