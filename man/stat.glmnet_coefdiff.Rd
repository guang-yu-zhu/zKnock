% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_glmnet_cv.R
\name{stat.glmnet_coefdiff}
\alias{stat.glmnet_coefdiff}
\title{Importance statistics based on a GLM with cross-validation}
\usage{
stat.glmnet_coefdiff(X, X_k, y, family = "gaussian", cores = 2, ...)
}
\arguments{
\item{X}{n-by-p matrix of original variables.}

\item{X_k}{n-by-p matrix of knockoff variables.}

\item{y}{Response variable vector of length n. Quantitative for family="gaussian" or "poisson".
For family="binomial", y should be either a two-level factor, a two-column matrix of counts,
or proportions. For family="multinomial", y can be a factor with at least two levels or a matrix.
For family="cox", y should be a two-column matrix with 'time' and 'status'. For family="mgaussian",
y is a matrix of quantitative responses.}

\item{family}{Response type, one of 'gaussian', 'binomial', 'multinomial', 'cox', or 'mgaussian'.}

\item{cores}{Number of cores to use for parallel computation. Defaults to 2 if available.}

\item{...}{Additional arguments specific to \code{glmnet} (see Details).}
}
\value{
A vector of statistics \eqn{W} of length p.
}
\description{
Fits a generalized linear model via penalized maximum likelihood with cross-validation
and computes the difference statistic
\deqn{W_j = |Z_j| - |\tilde{Z}_j|}
where \eqn{Z_j} and \eqn{\tilde{Z}_j} are the coefficient estimates for the
jth variable and its knockoff, respectively. The regularization parameter
\eqn{\lambda} is selected by cross-validation and computed with \code{glmnet}.
}
\details{
This function uses the \code{glmnet} package to fit a GLM model via penalized maximum likelihood.
The value of \eqn{\lambda} is chosen by 10-fold cross-validation unless specified otherwise.

The optional \code{nlambda} parameter can control the number of \eqn{\lambda} values, and the default
is 500. For family="binomial", if the lambda sequence isn't provided, a log-linear sequence is generated.

For more details, see \code{\link[glmnet:cv.glmnet]{glmnet::cv.glmnet()}} and \code{\link[glmnet:glmnet]{glmnet::glmnet()}}.
}
\examples{
# Synthetic Data
set.seed(2024)
p=200; n=100; k=15
mu = rep(0,p); Sigma = diag(p)
X = matrix(rnorm(n*p),n)
nonzero = 1:k
beta = 3.5 * (1:p \%in\% nonzero)
y = X \%*\% beta + rnorm(n)

# Knockoff Procedure
Xk = create.knockoff(X = X, type = 'shrink', n_ko = 2)
res = knockoff.filter(X, y, Xk, statistic = stat.glmnet_coefdiff, family='gaussian')
res$shat

}
\seealso{
Other statistics: 
\code{\link{stat.SHAP}()},
\code{\link{stat.forward_selection}()},
\code{\link{stat.glmnet_lambdadiff}()},
\code{\link{stat.random_forest}()},
\code{\link{stat.sqrt_lasso}()},
\code{\link{stat.stability_selection}()}
}
\concept{statistics}
